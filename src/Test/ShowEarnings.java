/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Test;

import MyLibs.Doctor;
import MyLibs.Urologist;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Brey
 */
public class ShowEarnings extends javax.swing.JFrame implements FormCommand{

    /**
     * Creates new form ShowEarnings
     */
    
    
    
    public ShowEarnings() {
        initComponents();
        ImageIcon icon = new ImageIcon("C:\\Users\\AUBREY MARIE\\Desktop\\New folder (2)\\CodePrototype_Final_withDB_WithUI\\src\\images\\icons.png");
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        HistoryTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Earnings_Table = new javax.swing.JTable();
        BackHomes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        showTotal = new javax.swing.JLabel();
        searchDate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();

        HistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Doctor", "Patient", "Fee"
            }
        ));
        jScrollPane2.setViewportView(HistoryTable);

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel5.setText("Total Earnings:");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Proj_background.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 30)); // NOI18N
        jLabel3.setText("Consultation History");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 300, 52));

        Earnings_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor", "Date", "Patient", "Payment"
            }
        ));
        jScrollPane1.setViewportView(Earnings_Table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 430, 170));

        BackHomes.setFont(new java.awt.Font("Palatino Linotype", 0, 12)); // NOI18N
        BackHomes.setText("HOME");
        BackHomes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackHomesActionPerformed(evt);
            }
        });
        getContentPane().add(BackHomes, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 150, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cs project logo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 190, 70));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel4.setText("for the Day:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 120, 52));

        showTotal.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        showTotal.setText("jLabel6");
        getContentPane().add(showTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 70, 30));

        searchDate.setText("Search");
        searchDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDateActionPerformed(evt);
            }
        });
        getContentPane().add(searchDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 90, 90, 50));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel6.setText("Enter Date:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 110, 52));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel7.setText("Total Earnings");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 190, 52));

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 220, 29));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Proj_background.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackHomesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackHomesActionPerformed
        // TODO add your handling code here:
    HomePage home = new HomePage();

    home.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    //login.setSize(800, 600);
    home.setVisible(true);
    home.setLocationRelativeTo(null);

    home.setVisible(true);
    this.setVisible(false);
    }//GEN-LAST:event_BackHomesActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showTableDataearn();
        
    }//GEN-LAST:event_formWindowOpened

    private void searchDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDateActionPerformed
        // TODO add your handling code here:
        
        java.util.Date searchdate = jDateChooser1.getDate();
       
       long ms = searchdate.getTime();
       java.sql.Date sqlDate = new java.sql.Date(ms);
       // String getsDate = dateSearch.getText(); 
       //System.out.println(sqlDate);
        if(sqlDate.equals("")){
            JOptionPane.showMessageDialog(null, "Field is blank");
        }
        
       // getConnection();
    
       else {
            ArrayList<Doctor> doctorearn =new ArrayList<Doctor>();
       try{
            String URL = "jdbc:mysql://localhost:3306/doctorquery";
            String USER = "root";
            String PASS = "password";
            Connection conns = DriverManager.getConnection(URL, USER, PASS);
            PreparedStatement statementss = conns.prepareStatement("SELECT SUM(Payment) FROM Consultation, Doctor WHERE Consult_Date = '" + sqlDate + "' AND Consultation.Doctor_ID = Doctor.Doctor_ID;");
            ResultSet resultss = statementss.executeQuery();
           
            while(resultss.next()){
            String r = resultss.getString(1);
            showTotal.setText(resultss.getString(1));
        //    System.out.println(r);
            }
       }
	catch(SQLException sex)
	{
            System.out.println(sex.getMessage());
	}
       try{
            String URL = "jdbc:mysql://localhost:3306/doctorquery";
            String USER = "root";
            String PASS = "password";
            
            Connection conn = DriverManager.getConnection(URL, USER, PASS);
            PreparedStatement statement = conn.prepareStatement("SELECT Doctor_NAME,Consult_Date, Patient_Name, Payment FROM Consultation, Doctor WHERE Consult_Date = '" + sqlDate + "' AND Consultation.Doctor_ID = Doctor.Doctor_ID;");
            ResultSet result = statement.executeQuery();
            
            DefaultTableModel model;
            model=(DefaultTableModel) Earnings_Table.getModel();
            model.setRowCount(0);
            
            
	    while(result.next())
            {
                String name = result.getString(1);
                String dat = result.getString(2);
                String pat = result.getString(3);
                String payment = result.getString(4);
                
              //  DefaultTableModel dtm = new DefaultTableModel(0, 0);
                Doctor r = new Doctor();
              r.setEarn(name);
              r.setDate(dat);
              r.setPatient(pat);
              r.setPayment(payment);
                doctorearn.add(new Doctor(r.getEarn(),r.getDate(), r.getPatient(), r.getPayment()));
            }
            //rs.close();
	    //myStmt.close();
            
            for(Doctor d:doctorearn){
         //   model.addRow(new Object[]{d.Earn,d.date, d.patient, d.payment});  
          model.addRow(new Object[]{d.getEarn(),d.getDate(), d.getPatient(), d.getPayment()});
            }
            
            
        }
	catch(SQLException sex)
	{
            System.out.println(sex.getMessage());
            JOptionPane.showMessageDialog(null,"Wrong input");
	}
               }
    }//GEN-LAST:event_searchDateActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void showTableDataearn() {
        Date date = new Date();
      SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
       String str = formatter.format(date);
        java.util.Date curdate = jDateChooser1.getDate();
       
    //   long ms = curdate.getTime();
      // java.sql.Date sqlDate = new java.sql.Date(ms);
    //  System.out.print("Current date: "+ str + "\n");
        ArrayList<Doctor> doctorearn =new ArrayList<Doctor>();
       // getConnection();
       try{
            String URL = "jdbc:mysql://localhost:3306/doctorquery";
            String USER = "root";
            String PASS = "password";
            
            Connection conns = DriverManager.getConnection(URL, USER, PASS);
       PreparedStatement statementss = conns.prepareStatement("SELECT SUM(Payment) FROM Consultation, Doctor WHERE Consult_Date = '" + str + "' AND Consultation.Doctor_ID = Doctor.Doctor_ID;");
            ResultSet resultss = statementss.executeQuery();
           
            while(resultss.next()){
            String r = resultss.getString(1);
            showTotal.setText(resultss.getString(1));
        //    System.out.println(r);
            }
       }
	catch(SQLException sex)
	{
            System.out.println(sex.getMessage());
	}
        try{
            String URL = "jdbc:mysql://localhost:3306/doctorquery";
            String USER = "root";
            String PASS = "password";
            
            Connection conn = DriverManager.getConnection(URL, USER, PASS);
            PreparedStatement statement = conn.prepareStatement("SELECT Doctor_NAME,Consult_Date, Patient_Name, Payment FROM Consultation, Doctor WHERE Consult_Date = '" + str + "' AND Consultation.Doctor_ID = Doctor.Doctor_ID;");
            ResultSet result = statement.executeQuery();
            
            DefaultTableModel model;
            model=(DefaultTableModel) Earnings_Table.getModel();
            model.setRowCount(0);
            
            
	    while(result.next())
            {
                String name = result.getString(1);
                String dat = result.getString(2);
                String pat = result.getString(3);
                String payment = result.getString(4);
                
              //  DefaultTableModel dtm = new DefaultTableModel(0, 0);
              
              Doctor r = new Doctor();
              r.setEarn(name);
              r.setDate(dat);
              r.setPatient(pat);
              r.setPayment(payment);
              
                doctorearn.add(new Doctor(r.getEarn(),r.getDate(), r.getPatient(), r.getPayment()));
               // model.addRow(new Object[]{r.getEarn(),r.getDate(), r.getPatient(), r.getPayment()});
                
                
            }
            //rs.close();
	    //myStmt.close();
            
            for(Doctor d:doctorearn){
           // model.addRow(new Object[]{d.Earn,d.date, d.patient, d.payment});  
           model.addRow(new Object[]{d.getEarn(),d.getDate(), d.getPatient(), d.getPayment()});
            }
            
            
        }
	catch(SQLException sex)
	{
            System.out.println(sex.getMessage());
	}
        
        
        
       /* try {
           String URL = "jdbc:mysql://localhost:3306/doctorquery";
            String USER = "root";
            String PASS = "hatdog";
            Connection conn = DriverManager.getConnection(URL, USER, PASS);
            PreparedStatement statement = conn.prepareStatement(""
                    + "SELECT Doctor_NAME,Consult_Date, Payment FROM Consultation, Doctor WHERE Consult_Date = '2021-10-13' AND\n" +
"Consultation.Doctor_ID = Doctor.Doctor_ID;");
            ResultSet result = statement.executeQuery();
          //  Earnings_Table.setModel(DbUtils.resultsSetToTableModel(result));
             
      
             //DefaultTableModel defaultTableModel = (DefaultTableModel) table.getEarnings_Table().getModel();
            while(result.next()){
                String name = result.getString(1);
                String dat = result.getString(2);
                String payment = result.getString(3);
                JTable tbl = new JTable();
                DefaultTableModel dtm = new DefaultTableModel(0, 0);
                
                tbl.setModel(dtm);
                
                dtm.addRow(new Object[]{name,dat,payment});
            }
                }
                catch (SQLException ex) {
            Logger.getLogger(ShowEarnings.class.getName()).log(Level.SEVERE, null, ex);
        }*/
            }
      //  }); 

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowEarnings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowEarnings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowEarnings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowEarnings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowEarnings().setVisible(true);
                //showTableData();
            
        
             
      
             //DefaultTableModel defaultTableModel = (DefaultTableModel) table.getEarnings_Table().getModel();
            
            }
        });
    }

    public void execute(){
       this.setVisible(true);
        
       this.pack();
       this.setLocationRelativeTo(null);
       this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackHomes;
    private javax.swing.JTable Earnings_Table;
    private javax.swing.JTable HistoryTable;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchDate;
    private javax.swing.JLabel showTotal;
    // End of variables declaration//GEN-END:variables
}
